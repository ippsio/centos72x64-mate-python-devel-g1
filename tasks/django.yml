---
#- name: fact
#  set_fact:
#    python_ver: '3.6.5'
#    http_path: 'app'
#    mysql_db: 'app'
#    mysql_user: 'app-user'
#    mysql_pass: 'app-pass'
#    mysql_host: 'localhost'
#    django_prj_root_path: '/var/www/django'
#    django_prj_name: 'project'
#    django_app_name: 'app'
#    django_app_port: '8000'
#    nginx_port: '80'
 
- name: Make django project root directory
  become: yes
  file:
    path=/var/www/django
    state=directory
    owner=vagrant
    group=vagrant
    mode=0755

- name: Set interpreter
  set_fact:
    #ansible_python_interpreter=$HOME/.pyenv/versions/{{ python_ver }}/bin/python
    ansible_python_interpreter="{{ userhome }}/.pyenv/versions/{{ python_ver }}/bin/python"

- name: Create requirements.txt
  blockinfile:
    dest: "{{ django_prj_root_path }}/{{ django_prj_name }}/requirements_django.txt"
    create: yes
    block: |
      Django
      djangorestframework
      django-filter
      mysqlclient
      PyMySQL
      pytz

- name: Install Django related modules.
  shell: bash -lc "pip install --default-timeout=32768 -r {{ django_prj_root_path }}/{{ django_prj_name }}/requirements_django.txt"

#- name: Set interpreter
#  set_fact:
#    ansible_python_interpreter=/usr/bin/python

- name: Create new app.conf
  become: yes
  blockinfile:
    dest: /tmp/{{ http_path }}.conf
    create: yes
    block: |
      server {
          server_name localhost;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP  $remote_addr;
          proxy_set_header X-Forwarded-Host $host;
          proxy_set_header X-Forwarded-Server $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      
          if ( $request_uri ~ "/{{ http_path }}" ) {
              set $not_ignore false;
          }
          if ($not_ignore != false ) {
              rewrite ^([^.]+[^/])$ $1/ permanent;
          }
      
          location /{{ http_path }}/ {
              proxy_pass http://localhost:{{ django_app_port }}/{{ http_path }}/;
          }
      
          location /admin/ {
              proxy_pass http://localhost:{{ django_app_port }}/admin/;
          }

          location /static/ {
              proxy_pass http://localhost:{{ django_app_port }}/static/;
          }
      }

- name: Copy conf to /etc.nginx/conf.d/
  become: yes
  copy:
    src: /tmp/{{ http_path }}.conf
    dest: /etc/nginx/conf.d/
    backup: yes

- name: Enable nginx service
  become: yes
  service: name=nginx enabled=yes state=restarted

- name: create mysql database
  mysql_db:
    login_user=root
    name={{ mysql_db }} 
    state=present

- name: create mysql user
  mysql_user: 
    login_user=root
    name={{ mysql_user }}
    host={{ item }}
    password={{ mysql_pass }}
    priv={{ mysql_db }}.*:ALL,GRANT 
    state=present
  with_items:
    - localhost
    - 127.0.0.1
    - "{{ mysql_host }}"

